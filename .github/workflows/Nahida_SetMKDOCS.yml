# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: "Nahida_SetMKDOCS: Deploy with MkDocs"

on:
  push:
    branches: [ "Nahida" ]
  pull_request:
    branches: [ "Nahida" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Starting...
      run: echo "Get ready for test deploy & deploy"
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Caching ENV setup
      run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
    - uses: actions/cache@v3
      with:
        key: mkdocs-material-${{ env.cache_id }}
        path: .cache
        restore-keys: |
          mkdocs-material-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs-material mkdocs[i18n] mkdocs-static-i18n
    - name: Force MkDocs
      run: mkdocs build
    - uses: actions/upload-pages-artifact@v1
      with:
        path: site/
    - name: Exit code
      run: echo "END"
  
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action
